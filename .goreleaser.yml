version: 2
project_name: opslevel-agent

before:
  hooks:
    - go mod tidy

builds:
  - env:
      - CGO_ENABLED=0
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    goos:
      - linux
      - darwin
    ignore:
      - goos: darwin
        goarch: '386'
    binary: '{{ .ProjectName }}'

universal_binaries:
  - replace: true

archives:
  - formats: [tar.gz]
    # this name template makes the OS and Arch compatible with the results of `uname`.
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        formats: zip

dockers:
  -
    dockerfile: Dockerfile
    use: buildx
    image_templates:
      - "public.ecr.aws/opslevel/opslevel-agent:{{ .Tag }}-amd64"
    build_flag_templates:
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Tag }}"
      - "--build-arg=VERSION={{ .Tag }}"
      - "--platform=linux/amd64"
    goos: linux
    goarch: amd64
  -
    dockerfile: Dockerfile
    use: buildx
    image_templates:
      - "public.ecr.aws/opslevel/opslevel-agent:{{ .Tag }}-arm64"
    build_flag_templates:
      - "--label=org.opencontainers.image.created={{ .Date }}"
      - "--label=org.opencontainers.image.revision={{ .FullCommit }}"
      - "--label=org.opencontainers.image.version={{ .Tag }}"
      - "--build-arg=VERSION={{ .Tag }}"
      - "--platform=linux/arm64"
    goos: linux
    goarch: arm64

docker_manifests:
  - name_template: "public.ecr.aws/opslevel/opslevel-agent:latest"
    image_templates:
      - "public.ecr.aws/opslevel/opslevel-agent:{{ .Tag }}-amd64"
      - "public.ecr.aws/opslevel/opslevel-agent:{{ .Tag }}-arm64"
  - name_template: "public.ecr.aws/opslevel/mcp:{{ .Tag }}"
    image_templates:
      - "public.ecr.aws/opslevel/opslevel-agent:{{ .Tag }}-amd64"
      - "public.ecr.aws/opslevel/opslevel-agent:{{ .Tag }}-arm64"

brews:
  - name: opslevel-agent
    description: "Main repository for the OpsLevel agent"
    homepage: "https://www.opslevel.com/"
    commit_author:
      name: OpsLevel Bots
      email: bots@opslevel.com
    commit_msg_template: "Cut Release '{{ .Tag }}' for '{{ .ProjectName }}'"
    license: "MIT"
    directory: Formula
    dependencies:
      - name: go
    install: |
      bin.install "opslevel-agent"
    test: |
      system "#{bin}/opslevel-agent version"
    repository:
      owner: OpsLevel
      name: homebrew-tap
      token: "{{ .Env.ORG_GITHUB_TOKEN }}"

checksum:
  name_template: '{{ .ProjectName }}.sha256'
  algorithm: sha256

signs:
  - artifacts: checksum
    args:
      - "--batch"
      - "--local-user"
      - "{{ .Env.GPG_FINGERPRINT }}"
      - "--output"
      - "${signature}"
      - "--detach-sign"
      - "${artifact}"

changelog:
  sort: desc
  filters:
    exclude:
      - "^Merge"
